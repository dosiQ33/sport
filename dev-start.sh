#!/bin/bash
# dev-start.sh - –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ development —Å—Ä–µ–¥—ã

echo "üöÄ –ó–∞–ø—É—Å–∫ Training API –≤ development —Ä–µ–∂–∏–º–µ..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env.dev
if [ ! -f .env.dev ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env.dev..."
    cat > .env.dev << EOF
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=mydatabase
POSTGRES_HOST=db
POSTGRES_PORT=5432
TELEGRAM_BOT_TOKEN_STAFF=your_telegram_bot_token_here
EOF
    echo "‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ TELEGRAM_BOT_TOKEN_STAFF –≤ .env.dev"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º production –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
docker-compose -f docker-compose.prod.yml down 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º development
docker-compose -f docker-compose.dev.yml up -d

echo ""
echo "‚úÖ Development —Å—Ä–µ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo ""
echo "üì± API endpoints:"
echo "   üåê http://localhost:8000"
echo "   üìö http://localhost:8000/docs (Swagger UI)"
echo "   üîç http://localhost:8000/redoc (ReDoc)"
echo ""
echo "üóÑÔ∏è  Database:"
echo "   üìä PostgreSQL: localhost:5444"
echo "   üë§ User: postgres"
echo "   üîë Password: postgres"
echo "   üè∑Ô∏è  Database: mydatabase"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   üìã –õ–æ–≥–∏ API: docker-compose -f docker-compose.dev.yml logs -f api"
echo "   üìã –õ–æ–≥–∏ –ë–î:  docker-compose -f docker-compose.dev.yml logs -f db"
echo "   üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: docker-compose -f docker-compose.dev.yml down"
echo "   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f docker-compose.dev.yml restart"
echo ""

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ API
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API..."
for i in {1..30}; do
    if curl -f http://localhost:8000/health 2>/dev/null; then
        echo "‚úÖ API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        break
    fi
    if [ $i -eq 30 ]; then
        echo "‚ö†Ô∏è  API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.dev.yml logs api"
    fi
    sleep 2
done