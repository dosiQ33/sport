# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–Ω—ã–º–∏ —Å—Ä–µ–¥–∞–º–∏

.PHONY: help dev-up dev-up-fast dev-down dev-logs dev-logs-api dev-build dev-rebuild dev-restart dev-shell prod-up prod-up-fast prod-down prod-logs prod-logs-api prod-logs-nginx prod-build prod-rebuild prod-restart setup-ssl clean init

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–º–æ—â—å
help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@echo "üõ†Ô∏è  DEVELOPMENT:"
	@echo "  make dev-up         - –ó–∞–ø—É—Å—Ç–∏—Ç—å development (—Å –∞–≤—Ç–æ–ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π)"
	@echo "  make dev-up-fast    - –ó–∞–ø—É—Å—Ç–∏—Ç—å development (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)"
	@echo "  make dev-down       - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å development"
	@echo "  make dev-restart    - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å development"
	@echo "  make dev-build      - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å development"
	@echo "  make dev-rebuild    - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ development"
	@echo "  make dev-logs       - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ª–æ–≥–∏ development"
	@echo "  make dev-logs-api   - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ API"
	@echo "  make dev-shell      - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É"
	@echo ""
	@echo "üöÄ PRODUCTION:"
	@echo "  make prod-up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å production (—Å –∞–≤—Ç–æ–ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π)"
	@echo "  make prod-up-fast   - –ó–∞–ø—É—Å—Ç–∏—Ç—å production (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)"
	@echo "  make prod-down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å production"
	@echo "  make prod-restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å production"
	@echo "  make prod-build     - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å production"
	@echo "  make prod-rebuild   - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ production"
	@echo "  make prod-logs      - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ª–æ–≥–∏ production"
	@echo "  make prod-logs-api  - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ API"
	@echo "  make prod-logs-nginx - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ Nginx"
	@echo ""
	@echo "üîê SSL & –£–¢–ò–õ–ò–¢–´:"
	@echo "  make setup-ssl      - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL –¥–ª—è production (—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑)"
	@echo "  make clean          - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ volumes"
	@echo "  make init           - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞"

# Development –∫–æ–º–∞–Ω–¥—ã
dev-up:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ development —Å—Ä–µ–¥—ã..."
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
	docker-compose -f docker-compose.dev.yml build
	docker-compose -f docker-compose.dev.yml up -d
	@echo "‚úÖ Development —Å—Ä–µ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
	@echo "üì± API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000"
	@echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
	@echo "üóÑÔ∏è  PostgreSQL: localhost:5444"

dev-up-fast:
	@echo "‚ö° –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ development —Å—Ä–µ–¥—ã (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)..."
	docker-compose -f docker-compose.dev.yml up -d
	@echo "‚úÖ Development —Å—Ä–µ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞!"

dev-down:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ development —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.dev.yml down

dev-restart:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ development —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.dev.yml restart

dev-logs:
	docker-compose -f docker-compose.dev.yml logs -f

dev-logs-api:
	docker-compose -f docker-compose.dev.yml logs -f api

dev-build:
	@echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ development —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.dev.yml build --no-cache
	docker-compose -f docker-compose.dev.yml up -d

dev-rebuild:
	@echo "üî® –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ development —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.dev.yml down
	docker-compose -f docker-compose.dev.yml build --no-cache
	docker-compose -f docker-compose.dev.yml up -d

dev-shell:
	docker-compose -f docker-compose.dev.yml exec api /bin/bash

# Production –∫–æ–º–∞–Ω–¥—ã
prod-up:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ production —Å—Ä–µ–¥—ã..."
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
	docker-compose -f docker-compose.prod.yml build
	docker-compose -f docker-compose.prod.yml up -d
	@echo "‚úÖ Production —Å—Ä–µ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
	@echo "üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: https://api.tensu.kz"

prod-up-fast:
	@echo "‚ö° –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ production —Å—Ä–µ–¥—ã (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)..."
	docker-compose -f docker-compose.prod.yml up -d
	@echo "‚úÖ Production —Å—Ä–µ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞!"

prod-down:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ production —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.prod.yml down

prod-restart:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ production —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.prod.yml restart

prod-logs:
	docker-compose -f docker-compose.prod.yml logs -f

prod-logs-api:
	docker-compose -f docker-compose.prod.yml logs -f api

prod-logs-nginx:
	docker-compose -f docker-compose.prod.yml logs -f nginx

prod-build:
	@echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ production —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.prod.yml build --no-cache
	docker-compose -f docker-compose.prod.yml up -d

prod-rebuild:
	@echo "üî® –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ production —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.prod.yml down
	docker-compose -f docker-compose.prod.yml build --no-cache
	docker-compose -f docker-compose.prod.yml up -d

# SSL setup
setup-ssl:
	@echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL..."
	chmod +x setup-ssl.sh
	./setup-ssl.sh

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ volumes..."
	docker-compose -f docker-compose.dev.yml down -v --remove-orphans 2>/dev/null || true
	docker-compose -f docker-compose.prod.yml down -v --remove-orphans 2>/dev/null || true
	docker system prune -f
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
init:
	@echo "üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞..."
	@if [ ! -f .env.dev ]; then \
		echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env.dev..."; \
		echo "POSTGRES_USER=postgres" > .env.dev; \
		echo "POSTGRES_PASSWORD=postgres" >> .env.dev; \
		echo "POSTGRES_DB=mydatabase" >> .env.dev; \
		echo "POSTGRES_HOST=db" >> .env.dev; \
		echo "POSTGRES_PORT=5432" >> .env.dev; \
		echo "TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here" >> .env.dev; \
	fi
	@if [ -f .env ] && [ ! -f .env.prod ]; then \
		echo "üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ .env –≤ .env.prod..."; \
		mv .env .env.prod; \
	fi
	@echo "‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo "üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å TELEGRAM_BOT_TOKEN –≤ .env.dev"